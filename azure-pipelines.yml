# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- main

pr: 
- '*'

pool:
  vmImage: 'windows-latest'
  demands:
    parallel: 1 

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.x'  # Use the latest version of Python 3 available on the agent
  displayName: 'Use Python 3.x'

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Install dependencies'

- script: |
    pip install pytest pytest-azurepipelines
    pytest
  displayName: 'pytest'

- script: |
    # Add your ML deployment commands here
    # For example, if you're using Azure ML, you might have commands to deploy your model.
    # You may also need to set up authentication and environment variables.
  displayName: 'Deploy ML Code'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)'
    artifact: 'MLCode'  # Set a meaningful name for your artifact
  displayName: 'Publish ML Code Artifact'

- script: |
    # Add any additional deployment steps here, such as deploying to a web service or a cloud platform.
  displayName: 'Additional Deployment Steps'
